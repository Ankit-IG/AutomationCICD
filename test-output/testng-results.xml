<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-21T20:28:45 IST" name="Suite" finished-at="2024-07-21T20:29:51 IST" duration-ms="65518">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.LoginErrorValidation()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" name="LoginErrorValidation" class="ankitsharmaacademy.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" name="submitOrder" class="ankitsharmaacademy.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-07-21T20:28:45 IST" name="Error Validation Test" finished-at="2024-07-21T20:29:30 IST" duration-ms="44828">
      <class name="ankitsharmaacademy.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:28:45 IST" name="launchApplication" finished-at="2024-07-21T20:28:52 IST" duration-ms="6678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:28:52 IST" name="LoginErrorValidation" finished-at="2024-07-21T20:28:53 IST" duration-ms="860" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ankitsharmaacademy.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:28:53 IST" name="tearDown" finished-at="2024-07-21T20:28:53 IST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:28:53 IST" name="launchApplication" finished-at="2024-07-21T20:28:59 IST" duration-ms="5457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:28:59 IST" name="LoginErrorValidation" finished-at="2024-07-21T20:28:59 IST" duration-ms="545" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ankitsharmaacademy.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:29:00 IST" name="tearDown" finished-at="2024-07-21T20:29:00 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:29:00 IST" name="launchApplication" finished-at="2024-07-21T20:29:06 IST" duration-ms="6574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:29:06 IST" name="ProductErrorValidation" finished-at="2024-07-21T20:29:30 IST" duration-ms="23536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ankitsharmaacademy.ErrorValidationsTest@3336e6b6]" started-at="2024-07-21T20:29:30 IST" name="tearDown" finished-at="2024-07-21T20:29:30 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ankitsharmaacademy.ErrorValidationsTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2024-07-21T20:28:45 IST" name="Submt Order Test" finished-at="2024-07-21T20:29:51 IST" duration-ms="65518">
      <class name="ankitsharmaacademy.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:28:46 IST" name="launchApplication" finished-at="2024-07-21T20:28:52 IST" duration-ms="6345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:28:52 IST" name="submitOrder" data-provider="getData" finished-at="2024-07-21T20:29:17 IST" duration-ms="25230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Aniket@1, email=ankitsharma@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:29:17 IST" name="tearDown" finished-at="2024-07-21T20:29:17 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:29:17 IST" name="launchApplication" finished-at="2024-07-21T20:29:22 IST" duration-ms="4333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:29:22 IST" name="submitOrder" data-provider="getData" finished-at="2024-07-21T20:29:46 IST" duration-ms="24414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Aniket@1, email=ankitsharma1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:29:46 IST" name="tearDown" finished-at="2024-07-21T20:29:46 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:29:46 IST" name="launchApplication" finished-at="2024-07-21T20:29:50 IST" duration-ms="3874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistorytest()[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:29:50 IST" name="OrderHistorytest" finished-at="2024-07-21T20:29:51 IST" depends-on-methods="ankitsharmaacademy.SubmitOrderTest.submitOrder" duration-ms="688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistorytest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ankitsharmaacademy.SubmitOrderTest@17503f6b]" started-at="2024-07-21T20:29:51 IST" name="tearDown" finished-at="2024-07-21T20:29:51 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ankitsharmaacademy.SubmitOrderTest -->
    </test> <!-- Submt Order Test -->
  </suite> <!-- Suite -->
</testng-results>
